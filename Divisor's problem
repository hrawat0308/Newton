Problem Statement
Sara is solving a math problem in which she has given an integer N and her task is to find the number of operations required to convert N into 1.
Where in one operation you replace the number with its second-highest divisor.

Input
User Task:
Since this will be a functional problem, you don't have to take input. You just have to complete the function DivisorProblem() that takes integer N as argument.

Constraints:-
1 <= N <= 100000

Output
Return the number of operations required.




static int DivisorProblem(int N){
int i;
int divisor=0;
for(i = 0; N!=1 ; i++){
    for(int j = 1; j<N ; j++){
      if(N%j == 0){
        divisor = j;
      }
    }
  N = divisor;
}
return i;
}
