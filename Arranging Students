Problem Statement
In the morning assembly, there are N students standing in a line, such that the ith student from the front has height H[i].

In one move, you can pick any two students and swap their positions.

If you are allowed to do only one swap, can you arrange the students in increasing order of their hieghts?



Input
The first line of input contains T, the number of test cases.
The first line of each test case contains N, the number of students in the line.
The second line of each test case contains the heights of N students, where the ith index is the height of ith student.

Constraints:
1 <= T <= 103
1 <= N <= 104
1 <= H_i <= 105


Output
For each test case, output YES or NO









import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
                      // Your code her
        Scanner sc=new Scanner(System.in);
        int t = sc.nextInt();
        for(int i = 0; i< t; i++){
            int n = sc.nextInt();
            int[] arr = new int[n];
            for (int j = 0; j < n; j++) {
                arr[j] = sc.nextInt();
            }
            System.out.println(arrStu(arr, n));
        }
    }
    public static String arrStu(int[] arr, int n ){
        int[] newArr = new int[n];
        for(int i = 0; i<n ;i++){
            newArr[i] = arr[i];
        }
        Arrays.sort(newArr);
        int count = 0;
        for(int i = 0 ; i< n ;i++){
            if(arr[i] != newArr[i]) count++;
        }
        if(count > 2) return "NO";
        else return "YES";
    }
}
