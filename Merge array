Problem Statement
Given two sorted array your task is to merge these two arrays into a single array such that the merged array is also sorted


Input
First line contain two integers N and M the size of arrays
Second line contains N separated integers the elements of first array
Third line contains M separated integers elements of second array

Constraints:-
1<=N,M<=10000
1<=arr1[], arr2[] <=100000


Output
Output the merged array











import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
	public static void main (String[] args) {
        Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int M = sc.nextInt();
		int[] arr1 = new int[N];
		int[] arr2 = new int[M];

		for(int i=0;i<N;i++){
			arr1[i] = sc.nextInt();
		}

		for(int i=0;i<M;i++){
			arr2[i] = sc.nextInt();
		}

		int[] res = new int[N+M];
		merge(arr1, arr2, N, M, res);

		for(int a : res){
			System.out.print(a+" ");
		}
	}

	public static void merge(int[] arr1, int[] arr2, int N, int M, int[] res){
		int i =0, j = 0,  k = 0;
		while(i<N && j<M){
			if(arr1[i] < arr2[j]){
				res[k] = arr1[i];
				k++;
				i++;
			}
			else{
				res[k] = arr2[j];
				k++;
				j++;
			}
		}

		while(i<N){
			res[k] = arr1[i];
			k++;
			i++;
		}
		while(j<M){
			res[k] = arr2[j];
			k++;
			j++;
		}
	}

}
