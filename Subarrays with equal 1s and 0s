Problem Statement
Given an array arr[] of size N containing 0s and 1s only. The task is to count the subarrays having an equal number of 0s and 1s.

Input
The first line of the input contains an integer N denoting the size of the array and the second line contains N space-separated 0s and 1s.

Constraints:-
1 <= N <= 10^6
0 <= A[i] <= 1

Output
For each test case, print the count of required sub-arrays in new line.





import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
	public static void main (String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] arr = new int[N];
        for(int i=0;i<N;i++){
            arr[i] = sc.nextInt();
        }
        long subArrayCount = CountSubArray(arr, N);
        System.out.println(subArrayCount);
	}

    public static long CountSubArray(int[] arr, int N){
        HashMap<Integer,Integer> map = new HashMap<>();
        int curSum = 0; long count = 0;
        map.put(0,1);
        for(int i=0;i<N;i++){
            // curSum = arr[i];
            if(arr[i] == 0){
            curSum += -1;
        }
        else{
            curSum += 1;
        }
        if(map.containsKey(curSum)){
            count += map.get(curSum);
            map.put(curSum, map.get(curSum)+1);
        }
        else{
            map.put(curSum,1);
        }
        }
        
return count;

    }
}
