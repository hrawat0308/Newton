Problem Statement
Given a array of pair, your task is to sort the array elements on the basis of first element of pairs in descending order

Note:-If first element are equal in two or more pairs then give preference to second element having higher value.



Input
User Task:
Since this will be a functional problem, you don't have to take input. You just have to complete the function SortPair() that takes the array of pair and the integer N(size of array) as a parameter.

Custom Input
The first line of input will be a single integer N. The next line of input contains 2*N space separated integers where unique adjacent elements are pairs. Custom input for 1st sample:-
4
1 2 3 4 5 6 7 8

Constraints:-
1<=N<=1000
1<=value<=100000


Output
Return the sorted array of pairs.









/*
class Pair { 
    int x; 
    int y; 
  
    // Constructor 
public Pair(int x, int y) 
    { 
        this.x = x; 
        this.y = y; 
    } 
} 
*/ 

static Pair[] SortPair(Pair arr[], int n)  { 
        Arrays.sort(arr, new Comparator<Pair>() {
            @Override public int compare(Pair p1, Pair p2)
            {
                if(p1.x == p2.x){
                    return p2.y - p1.y;
                }
                 else{
                     return p2.x - p1.x;
                 }
                 // To compare the first element just
                                      //change the variable from p1.y - p2.y to x.
            }
        });
 
        return arr;
 }
